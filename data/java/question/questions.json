{
  "questions": [
    {
      "number": "1",
      "tag": [
        "method",
        "variable"
      ],
      "question": [
        "public class Main{",
        "    private int i = 1;",
        "    public static void main(String argv[]){",
        "    int i = 2;",
        "    Main s = new Main ();",
        "    s.someMethod();",
        "  }",
        "  public static void someMethod(){",
        "    System.out.println(i);",
        "  }",
        "}"
      ],
      "options": [
        "A.1 will be printed out",
        "B.2 will be printed out",
        "C.A compile time error will be generated",
        "D.An exception will be thrown"
      ]
    },
    {
      "number": "2",
      "tag": [
        "variable"
      ],
      "question": [
        "Which of the following lines will compile without warning or error?"
      ],
      "options": [
        "A.char d=\"d\";",
        "B.float f=3.1415;",
        "C.int i=34;",
        "D.byte b=257;",
        "E.boolean isPresent=true;"
      ]
    },
    {
      "number": "3",
      "tag": [
        "string"
      ],
      "question": [
        "Which of the following will return the position of the first letter a where the string s contains \"banana\"?"
      ],
      "options": [
        "A.lastIndexOf(2,s);",
        "B.s.indexOf('a');",
        "C.s.charAt(2);",
        "D.indexOf(s,'v');"
      ]
    },
    {
      "number": "4",
      "tag": [
        "string"
      ],
      "question": [
        "  String s1=\"Java\";",
        "  String s2=\"java\";",
        "  if(expression) {",
        "    System.out.println(\"Equal\");",
        "  } else {",
        "    System.out.println(\"Not equal\");",
        "  }"
      ],
      "options": [
        "s1==s2",
        "s1.matchCase(s2)",
        "s1.equalsIgnoreCase(s2)",
        "s1.equals(s2)"
      ]
    },
    {
      "number": "5",
      "tag": [
        "string"
      ],
      "question": [
        "What will be the output of the program?",
        "String x = new String(\"xyz\");",
        "String y = \"abc\";",
        "x = x + y,;"
      ],
      "options": [
        "A.2",
        "B.3",
        "C.4",
        "D.5"
      ]
    },
    {
      "number": "6",
      "tag": [
        "array"
      ],
      "question": [
        "Which two cause a compiler error?",
        "float[ ] f = new float(3);",
        "float f2[ ] = new float[ ];",
        "float[ ]f1 = new float[3];",
        "float f3[ ] = new float[3];",
        "float f5[ ] = {1.0f, 2.0f, 2.0f};"
      ],
      "options": [
        "A.2, 4",
        "B.3, 5",
        "C.4, 5",
        "D.1, 2"
      ]
    },
    {
      "number": "7",
      "tag": [
        "variable"
      ],
      "question": [
        "What is the widest valid returnType for methodA in line 3?",
        "public class ReturnIt ",
        " { ",
        "    returnType methodA(byte x, double y) /* Line 3 */",
        "    { ",
        "        return (long)x / y * 2; ",
        "    } ",
        "}"
      ],
      "options": [
        "A.int",
        "B.byte",
        "C.long",
        "D.double"
      ]
    },
    {
      "number": "8",
      "tag": [
        "method",
        "variable"
      ],
      "question": [
        "What will be the output of the program?",
        "public class Test{",
        "    public int aMethod(){",
        "        static int i = 0;",
        "        i++;",
        "        return i;",
        "    }",
        "    public static void main(String args[]){",
        "        Test test = new Test();",
        "        test.aMethod();",
        "        int j = test.aMethod();",
        "        System.out.println(j);",
        "    }",
        "}"
      ],
      "options": [
        "A.0",
        "B.1",
        "C.2",
        "D.Compilation fails."
      ]
    },
    {
      "number": "9",
      "tag": [
        "variable"
      ],
      "question": [
        "Which one is a valid declaration of a boolean?"
      ],
      "options": [
        "A.boolean b1 = 0;",
        "B.boolean b2 = 'false';",
        "C.boolean b3 = false;",
        "D.boolean b4 = Boolean.false();",
        "E.boolean b5 = no;"
      ]
    },
    {
      "number": "10",
      "tag": [
        "array"
      ],
      "question": [
        [
          "Which one of the following will declare an array and initialize it with five numbers?"
        ]
      ],
      "options": [
        "A.Array a = new Array(5);",
        "B.int [] a = {23,22,21,20,19};",
        "C.int a [] = new int[5];",
        "D.int [5] array;"
      ]
    },
    {
      "number": "11",
      "tag": [
        "arithmetic"
      ],
      "question": [
        "Which two statements are equivalent?",
        "3/2",
        "3<2",
        "3*4",
        "3<<2"
      ],
      "options": [
        "A.1 and 2",
        "B.2 and 3",
        "C.3 and 4",
        "D.1 and 4"
      ]
    },
    {
      "number": "12",
      "tag": [
        "operator"
      ],
      "question": [
        "What will be the output of the program?",
        "Float f = new Float(\"12\"); ",
        "switch (f){",
        "    case 12: System.out.println(\"Twelve\"); ",
        "    case 0: System.out.println(\"Zero\"); ",
        "    default: System.out.println(\"Default\"); ",
        "}"
      ],
      "options": [
        "A.Zero",
        "B.Twelve",
        "C.Default",
        "D.Compilation fails"
      ]
    },
    {
      "number": "13",
      "tag": [
        "array"
      ],
      "question": [
        "Which two cause a compiler error?",
        "float[ ] f = new float(3);",
        "float f2[ ] = new float[ ];",
        "float[ ]f1 = new float[3];",
        "float f3[ ] = new float[3];",
        "float f5[ ] = {1.0f, 2.0f, 2.0f};"
      ],
      "options": [
        "A.2, 4",
        "B.3, 5",
        "C.4, 5",
        "D.1, 2"
      ]
    },
    {
      "number": "14",
      "tag": [
        "method"
      ],
      "question": [
        " Which is valid in a class that extends class A?",
        "class A{",
        "protected int method1(int a, int b){",
        "     return 0; ",
        "   } ",
        "}"
      ],
      "options": [
        "A.public int method1(int a, int b) {return 0; }",
        "B.private int method1(int a, int b) { return 0; }",
        "C.public short method1(int a, int b) { return 0; }",
        "D.static protected int method1(int a, int b) { return 0; }"
      ]
    },
    {
      "number": "15",
      "tag": [
        "method"
      ],
      "question": [
        "      class PassS{",
        " public static void main(String [] args){",
        "     PassS p = new PassS();",
        "     p.start();",
        " }",
        "",
        "  void start(){",
        "     String s1 = \"slip\";",
        "     String s2 = fix(s1);",
        "     System.out.println(s1 + \" \" + s2);",
        " }",
        "",
        "  String fix(String s1){",
        "     s1 = s1 + \"stream\";",
        "     System.out.print(s1 + \" \");",
        "     return \"stream\";",
        " }",
        "}"
      ],
      "options": [
        "A.slip stream",
        "B.slipstream stream",
        "C.stream slip stream",
        "D.slipstream slip stream"
      ]
    },
    {
      "number": "16",
      "tag": [
        "method",
        "variable"
      ],
      "question": [
        "class Test{",
        "    static int s;",
        "    public static void main(String [] args){",
        "        Test p = new Test();",
        "        p.start();",
        "        System.out.println(s);",
        "    }",
        ",",
        ",    void start(){",
        "        int x = 7;",
        "        twice(x);",
        "        System.out.print(x + \" \");",
        "    }",
        ",",
        ",    void twice(int x){",
        "        x = x*2;",
        "        s = x;",
        "    }",
        "  }"
      ],
      "options": [
        "A.7 7",
        "B.7 14",
        "C.14 0",
        "D.14 14"
      ]
    },
    {
      "number": "17",
      "tag": [
        "operator"
      ],
      "question": [
        "public void test(int x){ ",
        "    int odd = 1; ",
        "    if(odd) /* Line 4 */{",
        "       System.out.println(\"odd\"); ",
        "   } ",
        "    else{",
        "       System.out.println(\"even\"); ",
        "   } ",
        "}"
      ],
      "options": [
        "A.Compilation fails.",
        "B.\"odd\" will always be output.",
        "C.\"even\" will always be output.",
        "D.\"odd\" will be output for odd values of x, and \"even\" for even values."
      ]
    },
    {
      "number": "18",
      "tag": [
        "operator"
      ],
      "question": [
        " int i = 1, j = 10; ",
        "do{",
        "    if(i > j) ",
        "    {",
        "       break; ",
        "   } ",
        "    j--; ",
        "} while (++i < 5); ",
        "System.out.println(\"i = \" + i + \" and j = \" + j);"
      ],
      "options": [
        "A.i = 6 and j = 5",
        "B.i = 5 and j = 5",
        "C.i = 6 and j = 4",
        "D.i = 5 and j = 6"
      ]
    },
    {
      "number": "19",
      "tag": [
        "operator"
      ],
      "question": [
        "      public class Test{  ",
        " public static void main(String args[]){ ",
        "     int i = 1, j = 0; ",
        "     switch(i){ ",
        "         case 2: j += 6; ",
        "         case 4: j += 1; ",
        "         default: j += 2; ",
        "         case 0: j += 4; ",
        "     } ",
        "      System.out.println(\"j = \" + j); ",
        " } ",
        "}"
      ],
      "options": [
        "A.j = 0",
        "B.j = 2",
        "C.j = 4",
        "D.j = 6"
      ]
    },
    {
      "number": "20",
      "tag": [
        "variable"
      ],
      "question": [
        "Which is valid declaration of a float?"
      ],
      "options": [
        "A.float f = 1F;",
        "B.float f = 1.0;",
        "C.float f = \"1\";",
        "D.float f = 1.0d;"
      ]
    },
    {
      "number": "21",
      "tag": [
        "string",
        "operator"
      ],
      "question": [
        "class Test{",
        "  public static void main(String [] args){",
        "      int x=20;",
        "      String sup = (x < 15) ? \"small\" : (x < 22)? \"tiny\" : \"huge\";",
        "      System.out.println(sup);",
        "  }",
        "}"
      ],
      "options": [
        "A.small",
        "B.tiny",
        "C.huge",
        "D.Compilation fails"
      ]
    },
    {
      "number": "22",
      "tag": [
        "variable"
      ],
      "question": [
        "Which of the following are legal lines of code?",
        "1.int w = (int)888.8;",
        "2.byte x = (byte)1000L;",
        "3.long y = (byte)100;",
        "4.byte z = (byte)100L,;"
      ],
      "options": [
        "A.1 and 2",
        "B.2 and 3",
        "C.3 and 4",
        "D.All statements are correct."
      ]
    },
    {
      "number": "23",
      "tag": [
        "arithmetic"
      ],
      "question": [
        "Which two statements are equivalent?",
        "1.16*4",
        "2.16>>2",
        "3.16/2^2",
        "4.16>>>2"
      ],
      "options": [
        "A.1 and 2",
        "B.2 and 4",
        "C.3 and 4",
        "D.1 and 3"
      ]
    },
    {
      "number": "24",
      "tag": [
        "operator"
      ],
      "question": [
        "public class Test{",
        "  public static void main(String [] args){",
        "      int I = 1;",
        "      do while ( I < 1 )",
        "      System.out.print(\"I is \" + I);",
        "      while ( I > 1 ) ;",
        "  }",
        "}"
      ],
      "options": [
        "A.I is 1",
        "B.I is 1 I is 1",
        "C.No output is produced.",
        "D.Compilation error"
      ]
    },
    {
      "number": "25",
      "tag": [
        "core"
      ],
      "question": [
        "> java Test red green blue",
        "public class Test{ ",
        "  public static void main (String[] args){",
        "       String baz = args[1]; ",
        "       String bar = args[2]; ",
        "       String foo = args[3]; ",
        "       System.out.println(\"foo = \" + foo); /* Line 8 */",
        "  } ",
        "}"
      ],
      "options": [
        "A.baz =",
        "B.baz = null",
        "C.baz = blue",
        "D.Runtime Exception"
      ]
    },
    {
      "number": "26",
      "tag": [],
      "question": [
        "int i = 1, j = 10; ",
        "do{",
        "   if(i++ > --j){/* Line 4 */",
        "       continue; ",
        "   } ",
        "} while (i < 5); ",
        "System.out.println(\"i = \" + i + \"and j = \" + j); /* Line 9 */"
      ],
      "options": [
        "A.i = 6 and j = 5",
        "B.i = 5 and j = 5",
        "C.i = 6 and j = 6",
        "D.i = 5 and j = 6"
      ]
    },
    {
      "number": "27",
      "tag": [
        "core"
      ],
      "question": [
        "What is the most restrictive access modifier that will allow members of one class to have access to members of another class in the same package?"
      ],
      "options": [
        "A.public",
        "B.abstract",
        "C.protected",
        "D.synchronized",
        "E.default access"
      ]
    },
    {
      "number": "28",
      "tag": [
        "string"
      ],
      "question": [
        "public class Test{ ",
        "  public static void main (String args[]){",
        "      String str = NULL; ",
        "      System.out.println(str); ",
        "  } ",
        "}"
      ],
      "options": [
        "A.NULL",
        "B.Compile Error",
        "C.Code runs but no output",
        "D.Runtime Exception"
      ]
    },
    {
      "number": "29",
      "tag": [
        "string"
      ],
      "question": [
        "String x = \"xyz\";",
        "x.toUpperCase(); /* Line 2 */",
        "String y = x.replace('Y', 'y');",
        "y = y + \"abc\";",
        "System.out.println(y);"
      ],
      "options": [
        "A.abcXyZ",
        "B.abcxyz",
        "C.xyzabc",
        "D.XyZabc"
      ]
    },
    {
      "number": "30",
      "tag": [
        "array"
      ],
      "question": [
        "Which cause a compiler error?"
      ],
      "options": [
        "A.int[ ] scores = {3, 5, 7};",
        "B.int [ ][ ] scores = {2,7,6}, {9,3,45};",
        "C.String cats[ ] = {\"Fluffy\", \"Spot\", \"Zeus\"};",
        "D.boolean results[ ] = new boolean [] {true, false, true};",
        "E.Integer results[ ] = {new Integer(3), new Integer(5), new Integer(8)};"
      ]
    }
  ]
}